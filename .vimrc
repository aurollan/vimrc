"Vim default setup from 42 START
"Do not edit this file
"Put your own configuration options in ~/.myvimrc

"Activate indentation
filetype off
filetype plugin indent on
set smartindent

"Non-expanded, 4-wide tabulations
set tabstop=4
set shiftwidth=4
" Previous
" set noexpandtab
" Actual
set expandtab

"Disable vi-compatibility
set nocompatible

"Real-world encoding
set encoding=utf-8

"Interpret modelines in files
set modelines=1

"Do not abandon buffers
set hidden

"Don't bother throttling tty
set ttyfast

"More useful backspace behavior
set backspace=indent,eol,start

"Use statusbar on all windows
set laststatus=2

"Better search
set ignorecase
set smartcase
set incsearch
set showmatch
set hlsearch
"Vim default setup from 42 END

"Vundle setup START
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

"let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" NerdTree
Plugin 'scrooloose/nerdtree'

" Auto closing brackets
Plugin 'Raimondi/delimitMate'

" git plugin in nerdtree
Plugin 'Xuyuanp/nerdtree-git-plugin'

" Status bar
Plugin 'vim-airline/vim-airline'

" gruvbox theme
Plugin 'morhetz/gruvbox'

" Linter
Plugin 'dense-analysis/ale'

" Display list of symbol
Plugin 'preservim/tagbar'

" Highlight yank
Plugin 'machakann/vim-highlightedyank'

" Tabularize text
Plugin 'godlygeek/tabular'

" surrounding things
Plugin 'tpope/vim-surround'

" Repeat works with plugin
Plugin 'tpope/vim-repeat'

" Tags file management
Plugin 'ludovicchabant/vim-gutentags'

" plugin git manager
Plugin 'tpope/vim-fugitive'

" Plugin diff git
Plugin 'airblade/vim-gitgutter'

" rainbow brackets
Plugin 'luochen1990/rainbow'

" C syntax hightlight
Plugin 'octol/vim-cpp-enhanced-highlight'

" Markdown visual in browser
Plugin 'suan/vim-instant-markdown', {'rtp': 'after'}

" Echo function doc (don't know how to make it work yet
" Plugin 'Shougo/echodoc.vim'

call vundle#end()            " required
filetype plugin indent on    " required
"Vundle setup END

"enable ALE fixers
let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\}

" enable ALE completion
let g:ale_completion_enabled = 1
" default compiler for linting is gcc, does NOT search for clang
let g:ale_c_cc_executable = 'gcc'
let g:ale_cpp_cc_executable = 'gcc'
" Only enable following linter
let g:ale_linters_explicit = 1
let g:ale_linters = {
\   'c': ['gcc', 'ccls'],
\   'cpp': ['gcc', 'ccls']
\}
" ccls cache information in /tmp
let g:ale_c_ccls_init_options = {
\   'cache': {
\       'directory': '/tmp/ccls/cache'
\   }
\ }

" Open Nerd Panel with a new tab
let sbv_open_nerdtree_with_new_tab=1
let sbv_open_nerdtree_to_start=1
" Leave NERDTree if it is last opened window
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
" Open NERDTree automatically when vim startup
autocmd vimenter * NERDTree
" Go to previous (last accessed) window at entry
autocmd VimEnter * wincmd p
" Open Nerdtree when vim startup up with no specified file
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" gutentags generate tag files in a specific repository
let g:gutentags_cache_dir = expand('~/.cache/vim/ctags/')
" Add extra information on tags
" a: Access (or export) of class members
" i: Inheritance information
" l: Language of input file containing tag
" m: Implementation information
" n: Line number of tag definition
" S: Signature of routine (e.g. prototype or parameter list)
let g:gutentags_ctags_extra_args = [
            \ '--fields=+ailmnS',
            \ ]
" Exclude following file pattern
" let g:gutentags_ctags_exclude = [
"             \ '*.git', '*.svg', '*.hg',
"             \ '*.ccls*',
"             \ ]

"Set auto indenting
set ai
" vplit on right of current buffer
set splitright
" vplit below current buffer
set splitbelow
" Turn hybrid line numbers on
:set number relativenumber
" fuzzy finder
set path+=**
" Diplay all matching files when we tab complete
set wildmenu
"Activate syntax color
syntax on
"Activate spell checking
set spell
"Color 81th charactere on a line
highlight ColorColumn ctermbg=red
call matchadd('ColorColumn', '\%81v', 100)

"Set syntax color theme
set bg=dark
let g:gruvbox_contrast_dark='hard'
colorscheme gruvbox

" Need comment to understand what it does
" autocmd BufReadPost fugitive://* set bufhidden=delete
" set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P

" Toggle tagbar with F8 (Plugin)
nmap <F8> :TagbarToggle<CR>

" Enable rainbow brackets (Plugin)
let g:rainbow_active = 1

 
" enable local .vimrc file
" Used to setup specific command for ALE in .vimrc located in project
" repository
" exrc allows loading local executing local rc files.
" secure disallows the use of :autocmd, shell and write commands in local 
" .vimrc files.
set exrc
set secure
