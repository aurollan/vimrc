"Vim default setup from 42 START
"Do not edit this file
"Put your own configuration options in ~/.myvimrc

"Activate indentation
filetype off
filetype plugin indent on
set smartindent

"Non-expanded, 4-wide tabulations
set tabstop=4
set shiftwidth=4
set noexpandtab

"Disable vi-compatibility
set nocompatible

"Real-world encoding
set encoding=utf-8

"Interpret modelines in files
set modelines=1

"Do not abandon buffers
set hidden

"Don't bother throttling tty
set ttyfast

"More useful backspace behavior
set backspace=indent,eol,start

"Use statusbar on all windows
set laststatus=2

"Better search
set ignorecase
set smartcase
set incsearch
set showmatch
set hlsearch
"Vim default setup from 42 END

"Vundle setup START
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

"let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"NerdTree
Plugin 'scrooloose/nerdtree'

"Auto closing brackets
Plugin 'Raimondi/delimitMate'

"git plugin in nerdtree
Plugin 'Xuyuanp/nerdtree-git-plugin'

"Status bar
Plugin 'vim-airline/vim-airline'

"gruvbox theme
Plugin 'morhetz/gruvbox'

"Linter
Plugin 'dense-analysis/ale'

"surrounding things
Plugin 'tpope/vim-surround'

"Tags file management
Plugin 'ludovicchabant/vim-gutentags'

" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'

" Tag with F8
Plugin 'majutsushi/tagbar'

" Plugin diff git
Plugin 'airblade/vim-gitgutter'

" C syntax hightlight
Plugin 'octol/vim-cpp-enhanced-highlight'

" Markdown visual in browser
Plugin 'suan/vim-instant-markdown', {'rtp': 'after'}

call vundle#end()            " required
filetype plugin indent on    " required
"Vundle setup END

"enable linter only on save
let g:ale_lint_on_text_changed = 0
let g:ale_lint_on_save = 1

"Set auto indenting
set ai

"Prevent backups when editing system files
au BufWrite /private/tmp/crontab.* set nowritebackup
au BufWrite /private/etc/pw.* set nowritebackup


" Open NERDTree with vim
let sbv_open_nerdtree_to_start=1
" Open Nerd Panel with a new tab
let sbv_open_nerdtree_with_new_tab=1

" Launch nerdtree on current repository tapping 'vim'
autocmd VimEnter * call s:actionForOpen(sbv_open_nerdtree_to_start)
function! s:actionForOpen(openNerdTree)
	let filename = expand('%:t')
	if !empty(a:openNerdTree)
		NERDTree
	endif
	if !empty(filename)
		wincmd l
	endif
endfunction

autocmd BufCreate * call s:addingNewTab(sbv_open_nerdtree_with_new_tab)
function! s:addingNewTab(openNerdTree)
	let filename = expand('%:t')
	if winnr('$') < 2 && exists('t:NERDTreeBufName') == 0
		if !empty(a:openNerdTree)
			NERDTree
		endif
		if !empty(filename)
			wincmd l
		endif
	endif
endfunction

autocmd WinEnter * call s:CloseIfOnlyNerdTreeLeft()
function! s:CloseIfOnlyNerdTreeLeft()
	if exists("t:NERDTreeBufName")
		if bufwinnr(t:NERDTreeBufName) != -1
			if winnr("$") == 1
				q
			endif
		endif
	endif
endfunction

" vplit on right of current buffer
set splitright
" vplit below current buffer
set splitbelow
" Turn hybrid line numbers on
:set number relativenumber
" fuzzy finder
set path+=**
" Diplay all matching files when we tab complete
set wildmenu

"Activate syntax color
syntax on
"Set syntax color theme
set bg=dark
let g:gruvbox_contrast_dark='hard'
colorscheme gruvbox

autocmd BufReadPost fugitive://* set bufhidden=delete
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P

"Color 81th charactere on a line
highlight ColorColumn ctermbg=red
call matchadd('ColorColumn', '\%81v', 100)

"Activate spell checking
set spell
